using System;
using System.Collections.Generic;

namespace dzkurs
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Player player = new Player();
            
            Random random = new Random();
            Deck deckOfCards = new Deck();
            deckOfCards.CreateCards();           
            bool isWoking = true;

            while (isWoking)
            {
                Console.WriteLine("нажмите на пробел чтобы вытянуть карту");
                deckOfCards.ShuffleCards();
                ConsoleKeyInfo key = Console.ReadKey(true);


                if (key.Key == ConsoleKey.Spacebar && deckOfCards.Cards.Count > 0)
                {
                    Console.WriteLine("Вы Вытянули:");

                    player.toPickCard(deckOfCards);

                    Console.WriteLine("Ваши карты:");

                    for (int i = 0; i < player.PickedCards.Count; i++)
                    {
                        Console.Write(player.PickedCards[i].Name + player.PickedCards[i].Suit + ", ");
                    }
                }
                else if (key.Key == ConsoleKey.Escape)
                {
                    isWoking = false;
                }
                else
                {
                    Console.WriteLine("Не выходит!");
                }
            }
        }
    }

    class Card
    {
        public string Name { get; }
        public string Suit { get; }

        public Card(string suit, string name)
        {
            Name = name;
            Suit = suit;
        }
    }

    class Deck
    {
        public List<Card> Cards { get; private set; } = new List<Card>();
        
        private List<String> _suits = new List<String>() { "♠", "♣", "♦", "♥" };
        private List<String> _names = new List<String>() { "2", "3", "4", "5", "6", "7", "8", "9", "10", "Jack", "Queen", "King", "Ace"};

        public List<Card> CreateCards()
        {
            for (int i = 0; i < _suits.Count; i++)
            {
                for (int j = 0; j < _names.Count; j++)
                {
                    Cards.Add(new Card(_suits[i], _names[j]) );
                }
            }

            return Cards;
        }

        public List<Card> ShuffleCards()
        {
            Random random = new Random();

            for (int i = Cards.Count - 1; i >= 1; i--)
            {
                int j = random.Next(i + 1);
                var temp = Cards[j];
                Cards[j] = Cards[i];
                Cards[i] = temp;
            }

            return Cards;
        }
    }

    class Player
    {
        public List<Card> PickedCards { get; private set; } = new List<Card>();

        public Deck toPickCard(Deck deckOfCards)
        {
            Console.WriteLine(deckOfCards.Cards[deckOfCards.Cards.Count - 1].Name + deckOfCards.Cards[deckOfCards.Cards.Count - 1].Suit);
            PickedCards.Add(deckOfCards.Cards[deckOfCards.Cards.Count - 1]);
            deckOfCards.Cards.RemoveAt(deckOfCards.Cards.Count - 1);
            return deckOfCards;
        }
    }
}
