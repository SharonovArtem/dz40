using System;
using System.Collections.Generic;

namespace dzkurs
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Player player = new Player();
            Card card = new Card(null, null);
            Random random = new Random();
            Deck deckOfCards = new Deck();
            deckOfCards.CreateCards();
            bool isWoking = true;

            while (isWoking)
            {
                Console.WriteLine("нажмите на пробел чтобы вытянуть карту");
                deckOfCards.ShuffleCards();
                ConsoleKeyInfo key = Console.ReadKey(true);

                if (key.Key == ConsoleKey.Spacebar)
                {
                    player.toPickCard(card);
                }
                else if (key.Key == ConsoleKey.Escape)
                {
                    isWoking = false;
                }
                else
                {
                    Console.WriteLine("Не выходит!");
                }
            }
        }
    }

    class Card
    {
        public Card(string suit, string name)
        {
            Name = name;
            Suit = suit;
        }

        public string Name { get; }
        public string Suit { get; }

        private List<String> _suits = new List<String>() { "♠", "♣", "♦", "♥" };
        private List<String> _names = new List<String>() { "2", "3", "4", "5", "6", "7", "8", "9", "10", "Jack", "Queen", "King", "Ace" };

        public void ShowSuits(List<String> suits)
        {
            for (int i = 0; i < _suits.Count; i++)
            {
                suits.Add(_suits[i]);
            }
        }

        public void ShowNames(List<String> names)
        {
            for (int i = 0; i < _names.Count; i++)
            {
                names.Add(_names[i]);
            }
        }
    }

    class Deck
    {
        private Card _card = new Card(null, null);
        private List<Card> _сards = new List<Card>();
        List<String> suits = new List<String>();
        List<String> names = new List<String>();

        public void CreateCards()
        {
            _card.ShowSuits(suits);
            _card.ShowNames(names);

            for (int i = 0; i < suits.Count; i++)
            {
                for (int nameNumber = 0; nameNumber < names.Count; nameNumber++)
                {
                    _сards.Add(new Card(suits[i], names[nameNumber]));
                }
            }
        }

        public void ShuffleCards()
        {
            Random random = new Random();

            for (int i = _сards.Count - 1; i >= 1; i--)
            {
                int randomNumber = random.Next(_сards.Count);
                var temp = _сards[randomNumber];
                _сards[randomNumber] = _сards[i];
                _сards[i] = temp;
            }
        }

        public void DropOne()
        {
            Player player = new Player();

            Console.WriteLine("Вы Вытянули:");

            if (_сards.Count > 0)
            {
                player.droppedCards.Add(_сards[_сards.Count - 1]);

                _сards.RemoveAt(_сards.Count - 1);
            }
            else
            {
                Console.WriteLine("Карты кончились!");
            }
        }
    }

    class Player
    {
        Deck deck = new Deck();
        private List<Card> _pickedCards = new List<Card>();
        public List<Card> droppedCards { get; private set; } = new List<Card>();

        public void toPickCard(Card card)
        {
            deck.DropOne();

            _pickedCards.Add(droppedCards[droppedCards.Count]);

            droppedCards.RemoveAt(droppedCards.Count);

            Console.WriteLine(_pickedCards[_pickedCards.Count - 1].Name + _pickedCards[_pickedCards.Count - 1].Suit);

            ShowCards();
        }

        public void ShowCards()
        {
            Console.WriteLine("Ваши карты:");

            for (int i = 0; i < _pickedCards.Count; i++)
            {
                Console.Write(_pickedCards[i].Name + _pickedCards[i].Suit + ", ");
            }
        }
    }
}
