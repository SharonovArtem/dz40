using System;
using System.Collections.Generic;

namespace dzkurs
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Deck deckOfCards = new Deck();
            Player player = new Player();
            Random random = new Random();
            Table table = new Table();
            bool isWoking = true;
            deckOfCards.CreateCards();

            while (isWoking)
            {
                Console.WriteLine("нажмите на пробел чтобы вытянуть карту");
                ConsoleKeyInfo key = Console.ReadKey(true);

                if (key.Key == ConsoleKey.Spacebar)
                {
                    table.GetCard(player, deckOfCards);
                }
                else if (key.Key == ConsoleKey.Escape)
                {
                    isWoking = false;
                }
                else
                {
                    Console.WriteLine("Не выходит!");
                }
            }
        }
    }

    class Card
    {
        public Card(string suit, string name)
        {
            Name = name;
            Suit = suit;
        }

        public string Name { get; }
        public string Suit { get; }

        private List<String> _suits = new List<String>() { "♠", "♣", "♦", "♥" };
        private List<String> _names = new List<String>() { "2", "3", "4", "5", "6", "7", "8", "9", "10", "Jack", "Queen", "King", "Ace" };

        public void ShowSuits(List<String> suits)
        {
            for (int i = 0; i < _suits.Count; i++)
            {
                suits.Add(_suits[i]);
            }
        }

        public void ShowNames(List<String> names)
        {
            for (int i = 0; i < _names.Count; i++)
            {
                names.Add(_names[i]);
            }
        }
    }

    class Deck
    {
        private Card _card = new Card(null, null);
        private List<Card> _сards = new List<Card>();
        List<String> suits = new List<String>();
        List<String> names = new List<String>();

        public void CreateCards()
        {
            _card.ShowSuits(suits);
            _card.ShowNames(names);

            for (int i = 0; i < suits.Count; i++)
            {
                for (int nameNumber = 0; nameNumber < names.Count; nameNumber++)
                {
                    _сards.Add(new Card(suits[i], names[nameNumber]));
                }
            }
        }

        public void ShowCardsToTable(List<Card> cards)
        {
            for (int i = 0; i < _сards.Count; i++)
            {
                cards.Add(_сards[i]);
            }
        }

        public void ShuffleCards()
        {
            Random random = new Random();

            for (int i = _сards.Count - 1; i >= 1; i--)
            {
                int randomNumber = random.Next(_сards.Count);
                var temp = _сards[randomNumber];
                _сards[randomNumber] = _сards[i];
                _сards[i] = temp;
            }
        }

        public Card DropOne(Card droppedCard)
        {

            if (_сards.Count > 0)
            {
                droppedCard = _сards[_сards.Count - 1];

                _сards.RemoveAt(_сards.Count - 1);
            }
            else
            {
                Console.WriteLine("Карты кончились!");
            }
            
            return droppedCard;
        }
    }

    class Player
    {
        private List<Card> _pickedCards = new List<Card>();

        public void ShowCardsToTable(List<Card> cards)
        {
            for (int i = 0; i < _pickedCards.Count; i++)
            {
                cards.Add(_pickedCards[i]);
            }
        }

        public void ShowCards(List<Card> cards)
        {
            Console.WriteLine("Ваши карты:");

            for (int i = 0; i < cards.Count; i++)
            {
                Console.Write(cards[i].Name + cards[i].Suit + ", ");
            }
        }
    }

    class Table
    {
        public void GetCard( Player player, Deck deck)
        {
            
            Card droppedCard = new Card(null, null);
            List<Card> pickedCards = new List<Card>();
            List<Card> cardsInDeck = new List<Card>();
            player.ShowCardsToTable(pickedCards);
            deck.ShowCardsToTable(cardsInDeck);

            Console.WriteLine("Вы Вытянули:");

            droppedCard = deck.DropOne(droppedCard);

            pickedCards.Add(droppedCard);

            Console.WriteLine(pickedCards[pickedCards.Count - 1].Name + pickedCards[pickedCards.Count - 1].Suit);

            player.ShowCards(pickedCards);
        }
    }
}
